#!/bin/bash

# Quick setup script for Traefik secrets on homelab server
# Run this on the homelab server if automated deployment fails

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
TRAEFIK_DIR="$(dirname "$SCRIPT_DIR")"

echo -e "${BLUE}========================================${NC}"
echo -e "${BLUE}  Traefik Secrets Setup (Homelab)${NC}"
echo -e "${BLUE}========================================${NC}"
echo ""

# Check if we're in the right directory
if [ ! -f "$TRAEFIK_DIR/docker-compose.yaml" ]; then
    echo -e "${RED}Error: docker-compose.yaml not found in $TRAEFIK_DIR${NC}"
    echo "Please run this script from homelab/scripts directory"
    exit 1
fi

cd "$TRAEFIK_DIR"

echo -e "${YELLOW}This script will set up Traefik secrets for the homelab server.${NC}"
echo ""

# Ask for Cloudflare API Token
echo -e "${BLUE}Step 1: Cloudflare API Token${NC}"
if [ -f "cf-token" ]; then
    echo -e "${YELLOW}cf-token file already exists.${NC}"
    read -p "Do you want to replace it? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "Skipping cf-token creation."
    else
        read -p "Enter your Cloudflare API Token: " CF_TOKEN
        echo "$CF_TOKEN" > cf-token
        chmod 600 cf-token
        echo -e "${GREEN}✓ cf-token created${NC}"
    fi
else
    read -p "Enter your Cloudflare API Token: " CF_TOKEN
    echo "$CF_TOKEN" > cf-token
    chmod 600 cf-token
    echo -e "${GREEN}✓ cf-token created${NC}"
fi

echo ""

# Ask for Traefik dashboard credentials
echo -e "${BLUE}Step 2: Traefik Dashboard Credentials${NC}"
read -p "Enter dashboard username [admin]: " DASH_USER
DASH_USER=${DASH_USER:-admin}

read -s -p "Enter dashboard password: " DASH_PASS
echo ""

if [ -z "$DASH_PASS" ]; then
    echo -e "${RED}Error: Password cannot be empty${NC}"
    exit 1
fi

# Generate htpasswd hash
echo -e "${YELLOW}Generating password hash...${NC}"
DASH_CREDS=$(echo "$DASH_PASS" | openssl passwd -apr1 -stdin | sed -e 's/\$/\$\$/g')
DASH_CREDS="${DASH_USER}:${DASH_CREDS}"

echo ""

# Ask for other settings
echo -e "${BLUE}Step 3: Domain Configuration${NC}"
read -p "Enter your domain [plexlab.site]: " DOMAIN
DOMAIN=${DOMAIN:-plexlab.site}

read -p "Enter Cloudflare email [anand.krs@gmail.com]: " CF_EMAIL
CF_EMAIL=${CF_EMAIL:-anand.krs@gmail.com}

echo ""

# Create .env file
echo -e "${BLUE}Step 4: Creating .env file${NC}"
cat > .env << EOF
# Traefik Environment Configuration
# Generated by setup-traefik-secrets.sh on $(date)

# Cloudflare Configuration
CLOUDFLARE_EMAIL=$CF_EMAIL
CLOUDFLARE_API_TOKEN=$CF_TOKEN

# Domain
DOMAIN=$DOMAIN

# Traefik Dashboard Authentication
TRAEFIK_DASHBOARD_USER=$DASH_USER
TRAEFIK_DASHBOARD_PASSWORD=$DASH_PASS
TRAEFIK_DASHBOARD_CREDENTIALS=$DASH_CREDS
EOF

chmod 600 .env
echo -e "${GREEN}✓ .env file created${NC}"

echo ""

# Ensure acme.json exists with correct permissions
echo -e "${BLUE}Step 5: Setting up acme.json${NC}"
if [ ! -f "config/acme.json" ]; then
    touch config/acme.json
    echo -e "${GREEN}✓ acme.json created${NC}"
else
    echo -e "${YELLOW}acme.json already exists${NC}"
fi

chmod 600 config/acme.json
echo -e "${GREEN}✓ acme.json permissions set to 600${NC}"

echo ""

# Create logs directory
if [ ! -d "logs" ]; then
    mkdir -p logs
    echo -e "${GREEN}✓ logs directory created${NC}"
fi

echo ""
echo -e "${BLUE}========================================${NC}"
echo -e "${GREEN}  Setup Complete!${NC}"
echo -e "${BLUE}========================================${NC}"
echo ""
echo "Summary:"
echo "  - cf-token: Created"
echo "  - .env: Created with dashboard credentials"
echo "  - acme.json: Ready for Let's Encrypt"
echo "  - Domain: $DOMAIN"
echo ""
echo "Next steps:"
echo "  1. Review the generated .env file"
echo "  2. Deploy Traefik: docker compose up -d"
echo "  3. Check logs: docker compose logs -f"
echo "  4. Access dashboard: https://traefik.$DOMAIN"
echo ""
