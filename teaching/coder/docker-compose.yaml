version: "3.9"

services:
  coder:
    image: ghcr.io/coder/coder:latest
    container_name: coder
    restart: unless-stopped
    environment:
      # Database - using PostgreSQL
      CODER_PG_CONNECTION_URL: "postgresql://coder:${CODER_DB_PASSWORD}@postgres:5432/coder?sslmode=disable"

      # HTTP Server - Listen on all interfaces for Traefik
      CODER_HTTP_ADDRESS: "0.0.0.0:3000"

      # Access URL - Update this to your domain
      CODER_ACCESS_URL: "https://coder.lab.nexuswarrior.site"

      # Wildcard access for workspaces
      CODER_WILDCARD_ACCESS_URL: "*.coder.lab.nexuswarrior.site"

      # Security
      CODER_DISABLE_PASSWORD_AUTH: "false"  # Allow password login
      CODER_SESSION_DURATION: "24h"        # Kids stay logged in

      # Resources
      CODER_PROVISIONER_DAEMONS: "2"       # Number of provisioner workers

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/dev/docker/coder/data:/home/coder/.config/coderv2

    labels:
      # Traefik configuration
      - "traefik.enable=true"

      # Main Coder dashboard
      - "traefik.http.routers.coder.rule=Host(`coder.lab.nexuswarrior.site`)"
      - "traefik.http.routers.coder.entrypoints=websecure"
      - "traefik.http.routers.coder.tls=true"
      - "traefik.http.routers.coder.tls.certresolver=letsencrypt"
      - "traefik.http.services.coder.loadbalancer.server.port=3000"

      # Wildcard for workspaces (*.coder.lab.nexuswarrior.site)
      - "traefik.http.routers.coder-workspaces.rule=HostRegexp(`{subdomain:[a-z0-9-]+}.coder.lab.nexuswarrior.site`)"
      - "traefik.http.routers.coder-workspaces.entrypoints=websecure"
      - "traefik.http.routers.coder-workspaces.tls=true"
      - "traefik.http.routers.coder-workspaces.tls.certresolver=letsencrypt"
      - "traefik.http.routers.coder-workspaces.service=coder"

    networks:
      - proxy

    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15-alpine
    container_name: coder-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: coder
      POSTGRES_PASSWORD: ${CODER_DB_PASSWORD}
      POSTGRES_DB: coder
    volumes:
      - /home/dev/docker/coder/postgres-data:/var/lib/postgresql/data
    networks:
      - proxy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U coder"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  proxy:
    external: true  # Use existing Traefik network

# All data stored on TrueNAS via NFS mount at /home/dev/docker
# This ensures:
# - Coder config backed up by TrueNAS snapshots
# - PostgreSQL database protected
# - No data loss if container is removed
